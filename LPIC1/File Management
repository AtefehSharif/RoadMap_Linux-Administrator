---------------------------------------------                    
                      cd
---------------------------------------------
# change as relative path
   cd filename      example: cd sample/

# change as absolutly path 
   cd /Completepath example: cd /etc/udev

# change to parent directory
   cd ..

# change to home directory
   cd ~ or cd or cd -
---------------------------------------------
                     cat                    
---------------------------------------------
# combine multiple files into a single file
   cat filename filename > outputfilename                      example: cat file1.txt file2.txt > combined.txt

# appending to a file
   cat filename >> outputfilename                              example: cat additional.txt >> existing.txt

# open a file with number of line
   cat -n filename                                             example: cat -n file1.txt

# displaying multiple files
   cat filename filename                                       example: cat file1.txt file2.txt

# squeezing blank lines to one blank line 
   cat -s filename                                             example: cat -s file2.txt

# open the contents of a file from the end to the first
   tac filename                                                example: tac file1.txt
--------------------------------------------
                     cp
--------------------------------------------
# copy multiple files file to a directory
   cp filename filename path                                                                           				example: cp file1.txt file2.txt sample/
 
# copy directories along with their contents and subdirectories
   cp -r directoriname destination/                                                                     			example: cp -r sample sample2/

# copy and overwriting existing files if have same name	
   cp -f filename destination/                                                                          			example: cp -f file1.txt sample/

# preserving File Attributes such as permissions, timestamps ,symbolic links and ownership
   cp -a source/ destination/                                                                          				example: cp -a file1.txt sample2/

# copy file to paret directories
   cp filename ../                                 						       				example: cp file1.txt ../

# cp when the source file is newer than the destination file or when the destination file doesn't exist		
   cp -u filename destination/													example cp -u file2.txt sample/
--------------------------------------------
                     find
--------------------------------------------
# find any file ended with txt
   find path -name "value" 					example: find / -name "*.txt"

# find any directory 
   find path -type d						example: find / -type d

# find any file
   find path -type f						example: find / -type f

# find by size, more than one 1M
   find path -size +1M						example: find / -size +1M

# find by permission
   find path -perm value					example: find / -perm 555

# searching by modified time (modified last days)
   find path -mtime -value					example: find / -mtime -7

# searching by modified time (modified last minustes)
   find path -mmin -value					example: find / -mmin -5

# searching for empty directories
   find path -type d -empty					example: find / -type d -empty

# searching for empty files
   find path -type f -empty 					example: find / -type f -empty

# search and controlling the depth of searche
   find path -maxdepth 2 -name "value"				example: find /etc -maxdepth 2 -name "*.txt"
--------------------------------------------
                     ln
--------------------------------------------
# create hard link
   ln source destination					example: ln file1 file2

# create symbolic link
   ln -s source destination					example: ln -s file3 file4
--------------------------------------------
                     ls
--------------------------------------------
# detailed list of files and directories
   ll

# lists all files and directories in the current directory, including hidden files that start with a dot (.)
   ls -a

# displays file sizes in a human-readable format, such as "1.2K" or "5.8M"
   ls -lh

# lists files and directories sorted by their modification time, with the most recently modified items appearing first
   ls -lt

# lists files and directories recursively, showing the contents of subdirectories
   ls -R
--------------------------------------------
                     chown 
to change owner's files and directories
--------------------------------------------
# to show owner group and user
ls -l

# change user and group files
chown username:group file1 file2 

# change just username
chown username file

# just change username with UserID
chown UserID file

# just change group 
chown :group file

# change owner files like other file
chown --reference=ReferenceFILE FILE

# change owner recursively
chown -R username:group Directory

# change owner of link file
chown -h username:group linkFile

# show owner files
chown -v file1 file2

--------------------------------------------
                     mkdir
create directory
--------------------------------------------
# create directory recursively
mkdir -p /home/dir1/dir2

# create directory with specify permission like chmod
mkdir -m a=rwx [directories]
mkdir â€“m777 [directories]

--------------------------------------------
                     mv
move directory or file
--------------------------------------------
# change file name or directory name 
mv file1.txt file2.txt

# move with ask question
mv -i file1.txt file2.txt

#force move
mv -f file1 file1

#move file but if exist prevent to do
mv -n file1 file2

#move file but create a backup file
move -b file1 file2


--------------------------------------------
                     du
check size on disk
--------------------------------------------
#show size of directories and files but **summery and **human readable and **time modified
 du -sht ./*

#show size of all files and directories recursively
 du -aht .

#show size of directories
du -cht .

#show size on disk base on Mega kilo gig
 du -BM or -BK or -BG

--------------------------------------------
                     pwd
show current location
--------------------------------------------
it has a variable in OS level
echo $PWD


--------------------------------------------
                     touch
create file or modify access and modify and create time
--------------------------------------------
#create file1
 touch file1

#change "file access and modification time"
 touch -a file1
#change "only modification time"
touch -m

--------------------------------------------
                     df 
show disk space utilization and inode usage
--------------------------------------------
# -h human readable , a all partitions , T print file system
 df -haT
# check usage inodes
df -hi

--------------------------------------------
                     rm
rm file and directory
--------------------------------------------
# remove file rescursively
rm -rfv /home

--------------------------------------------
                     chmod
change permission 
--------------------------------------------
+,-r OR 4 stands for "read",
+,-w OR 2 stands for "write",
+,-x OR 1 stands for "execute"
0 stands for "no permission."
and mix of them like 7 full permission

user group other
000   000   000

chmod -Rv 755 file1
:: user: full access
:: group: read and excute
:: other: read and excute

--------------------------------------------
                     stat
information about file 
--------------------------------------------
stat file1

--------------------------------------------
                     grep
filter file 
--------------------------------------------
grep "search word" file1
OR
cat file1 | grep "search word"

#-r recursively, n line number in file, w find the exact match , -e expression like *2023*, -l just show list of files
 grep -rnwl . -e "hello*" -e "boy{s,1}"

# -i insensative , -c count of matches
grep -ic -A10 -B20 hello file1

--------------------------------------------
                     tail
tail file 
--------------------------------------------
#show the end of file online , used for log monitor
tail -f file
# stop tail and start run again

--------------------------------------------
                     echo
--------------------------------------------

# prints the value of the specified variable
   echo $variable								example: echo $AMIR

# prints multiple lines by using the "\n" (create new line)
   echo -e "line1\nline2"			      				example: echo -e "Amir\nsadeghi"

# print specified message and written to the file
   echo "messages" > filename							example: echo "Amir sadeghi" > sample

# print specified message and append to the file
   echo "messages" >> filename							example: echo "DevOps" >> sample

# print special characters with tabs
   echo -e "message\tmesaage\tmessage"						example: echo -e "This is a\tdevops\tproject"

# print embed the output of a command within the "echo" statement
   echo "message: $(variable)"							example: echo "Current date: $(date)"
--------------------------------------------
                     cut
--------------------------------------------
# to extract the second field from a colon-delimited file
   cut -d delimiter  -f fieldsnumber							example: cut -d : -f 2 sample		or	cut -d - -f 2 sample


# specifies the characters or character ranges to be extracted
   cut -c charactersnumbers filename							example: cut -c 1-3 sample
--------------------------------------------
                     vim
--------------------------------------------
#Switching Modes:
  Pressing "Esc" switches to Normal mode from any other mode.
  Pressing "i"   switches to Insert mode to start inserting text.
  Pressing ":"   switches to Command-line mode for executing commands.

#for edit text using
  Press "x" to delete the character under the cursor.
  Press "dd" to delete the entire line.
  Press "dw" in Normal mode. This deletes the word from the cursor position until the end of the word.
  Press "db" in Normal mode. This deletes the word from the cursor position backward
  Press "daw" in Normal mode. This deletes the whole word, regardless of the cursor position within the word
  Press "yy" to copy the entire line.
  Press "p" to paste the copied.

#Saving and Exiting
  Press ":w" to save the changes to the file.
  Press ":q" to quit Vim if there are no unsaved changes.
  Press ":wq" or ":x" to save changes and exit Vim.
  Press ":q!" to do not save changes and exit Vim.

#Searching and Replacing
  Press "/" followed by the search term and press Enter to search forward.
  Press "n" to find the next occurrence of the search term.
  Press ":s/search/replace" to replace the first occurrence of "search" with "replace" on the current line.
  Add "g" at the end (:s/search/replace/g) to replace all occurrences on the current line.
  Add "%s" at the beginning to search and replace throughout the entire file (:%s/search/replace/g).

#Undoing and Redoing Changes
  Press "u" to undo the last change. 
